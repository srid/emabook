name: "CI"
on:
  # Run only when pushing to master branch
  push:
    branches:
      - master
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            trusted-public-keys = cache.garnix.io:CTFPyKSLcx5RMJKfLo5EEPUObbA78b0YQ2DTCJXqr9g= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            substituters = https://cache.garnix.io https://cache.nixos.org/
      - name: Cache Nix dependencies
        run: |
          nix --version
          nix develop -j 4 -c echo
      - name: Format check
        run: |
          nix develop -j auto -c treefmt --fail-on-change
      - name: Hlint
        run: |
          nix develop -j auto -c hlint src
      - name: Build Nix
        id: build-nix
        run: |
          nix build -j auto
      - name: Build as docker img
        id: build
        run: |
          nix build -j auto -o docker-img .#dockerImage
          # docker
          export DOCKERIMG=$(readlink ./docker-img)
          echo "::set-output name=docker-img::${DOCKERIMG}"
      - name: Upload docker image tgz
        uses: actions/upload-artifact@v2
        if: github.ref == 'refs/heads/master'
        with:
          name: docker-img
          retention-days: 1
          path: |
            ${{ steps.build.outputs.docker-img }}

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    env:
      DOCKERTAG: latest
    steps:
      - name: Download docker img
        uses: actions/download-artifact@v2
        with:
          name: docker-img
      - name: Load Docker img
        run: |
          docker load -i *docker-image-emanote.tar.gz
      - name: Publish Docker image to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_PASS }} | docker login -u sridca --password-stdin
          set -x
          docker push sridca/emanote:latest

  website:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Download docker image
        uses: actions/download-artifact@v2
        with:
          name: docker-img
      - name: Load Docker image
        run: |
          docker load -i *docker-image-emanote.tar.gz
      - name: Generate website HTML ðŸ”§
        run: |
          mkdir -p ./docs/.ci/output
          # demo.md has broken links for demo
          docker run \
            -e LANG=C.UTF-8 -e LC_ALL=C.UTF-8 \
            -v $PWD/docs:/data \
            --tmpfs /tmp \
            sridca/emanote emanote --layers /data --allow-broken-links gen /data/.ci/output
          cp -r ./docs/.ci .
      - name: Deploy to website to gh-pages ðŸš€
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .ci/output
          cname: emanote.srid.ca
