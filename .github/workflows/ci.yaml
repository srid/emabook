name: "CI"
on:
  # Run only when pushing to master branch
  push:
    branches:
      - master
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v10
        with:
          name: srid
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          # Only needed for private caches
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Build Nix
        id: build-nix
        run: |
          [[ -n $(git status -s) ]] && (echo 'modified and/or untracked'; exit 2)
          ls -la
          nix --version
          nix-build -j auto --no-out-link
      - name: Build as docker img
        id: build
        run: |
          nix-build -j auto docker.nix --argstr tag latest -o docker-img
          # docker
          export DOCKERIMG=$(readlink ./docker-img)
          echo "::set-output name=docker-img::${DOCKERIMG}"
      - name: Upload docker image tgz
        uses: actions/upload-artifact@v2
        if: github.ref == 'refs/heads/master'
        with:
          name: docker-img
          retention-days: 1
          path: |
            ${{ steps.build.outputs.docker-img }}

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    env:
      DOCKERTAG: latest
    steps:
      - name: Download docker img
        uses: actions/download-artifact@v2
        with:
          name: docker-img
      - name: Publish Docker image to Docker Hub
        run: |
          docker load -i *docker-image-emanote.tar.gz
          echo ${{ secrets.DOCKER_PASS }} | docker login -u sridca --password-stdin
          set -x
          docker push sridca/emanote:latest

  website:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Download docker image
        uses: actions/download-artifact@v2
        with:
          name: docker-img
      - name: Generate website HTML ðŸ”§
        run: |
          mkdir -p ./docs/.ci/output
          docker load -i *docker-image-emanote.tar.gz
          # demo.md has broken links for demo
          docker run \
            -e LANG=C.UTF-8 -e LC_ALL=C.UTF-8 \
            -v $PWD/docs:/data \
            --tmpfs /tmp \
            sridca/emanote emanote --layers /data --allow-broken-links gen /data/.ci/output
          cp -r ./docs/.ci .
      - name: Deploy to website to gh-pages ðŸš€
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .ci/output
          cname: emanote.srid.ca
